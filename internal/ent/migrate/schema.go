// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HelpsColumns holds the columns for the "helps" table.
	HelpsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "idempotency_key", Type: field.TypeString, Unique: true},
		{Name: "reporter", Type: field.TypeUUID},
		{Name: "location", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry(point, 4326)"}},
		{Name: "description", Type: field.TypeString},
		{Name: "heart_rate", Type: field.TypeInt},
		{Name: "blood_pressure", Type: field.TypeInt},
		{Name: "body_temperature", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// HelpsTable holds the schema information for the "helps" table.
	HelpsTable = &schema.Table{
		Name:       "helps",
		Columns:    HelpsColumns,
		PrimaryKey: []*schema.Column{HelpsColumns[0]},
	}
	// IncidentsColumns holds the columns for the "incidents" table.
	IncidentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "idempotency_key", Type: field.TypeString, Unique: true},
		{Name: "reporter", Type: field.TypeUUID},
		{Name: "location", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry(point, 4326)"}},
		{Name: "type", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "image", Type: field.TypeBytes},
		{Name: "created_at", Type: field.TypeTime},
	}
	// IncidentsTable holds the schema information for the "incidents" table.
	IncidentsTable = &schema.Table{
		Name:       "incidents",
		Columns:    IncidentsColumns,
		PrimaryKey: []*schema.Column{IncidentsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HelpsTable,
		IncidentsTable,
	}
)

func init() {
}
